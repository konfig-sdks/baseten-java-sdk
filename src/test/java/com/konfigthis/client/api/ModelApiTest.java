/*
 * Baseten management API
 * REST API for management of Baseten resources
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.DeploymentV1;
import com.konfigthis.client.model.DeploymentsV1;
import com.konfigthis.client.model.ModelV1;
import com.konfigthis.client.model.ModelsV1;
import com.konfigthis.client.model.PromoteRequestV1;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ModelApi
 */
@Disabled
public class ModelApiTest {

    private static ModelApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new ModelApi(apiClient);
    }

    /**
     * Promotes a development deployment to production
     *
     * Creates a new production deployment from the development deployment, the currently building deployment is returned.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deployPromoteTest() throws ApiException {
        String modelId = null;
        Boolean scaleDownPreviousProduction = null;
        DeploymentV1 response = api.deployPromote(modelId)
                .scaleDownPreviousProduction(scaleDownPreviousProduction)
                .execute();
        // TODO: test validations
    }

    /**
     * Promotes a deployment to production
     *
     * Promotes an existing deployment to production and returns the same deployment.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deploymentPromoteTest() throws ApiException {
        String modelId = null;
        String deploymentId = null;
        Boolean scaleDownPreviousProduction = null;
        DeploymentV1 response = api.deploymentPromote(modelId, deploymentId)
                .scaleDownPreviousProduction(scaleDownPreviousProduction)
                .execute();
        // TODO: test validations
    }

    /**
     * Gets all deployments of a model
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAllDeploymentsTest() throws ApiException {
        String modelId = null;
        DeploymentsV1 response = api.getAllDeployments(modelId)
                .execute();
        // TODO: test validations
    }

    /**
     * Gets all models
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAllModelsTest() throws ApiException {
        ModelsV1 response = api.getAllModels()
                .execute();
        // TODO: test validations
    }

    /**
     * Gets a model by ID
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getModelByIdTest() throws ApiException {
        String modelId = null;
        ModelV1 response = api.getModelById(modelId)
                .execute();
        // TODO: test validations
    }

}
